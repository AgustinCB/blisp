(join (list 1 2 3) (list 12 3) '(1 2 3))
(def '(ref) (head '(list 1 2 3 4)))
(list ref)
(ref 1 2 3)
(list 1 2 3 4 ref)
(eval '(head (list 1 2 3 4)))
(tail '(tail tail tail))
(eval (tail '(tail tail '(5 6 7))))
(eval (head '((+ 1 2) (+ 10 20))))
(def '(x y a b) 100 200 5 6)
(list x y a b)
(def '(arglist) '(a b x y))
(list arglist)
(def arglist 1 2 3 4)
(list a b x y)
'(* x (+ x y))
((# '(x y) (* x (+ x y))) 10 20)
(def '(add-mult) (# '(x y) (* x (+ x y))))
(add-mult 10 20)
(add-mult x y)
((add-mult x) y)
(+ (eval '(1 2 3 4)))
(def '(add-mult) (# '(x &args) (* x (+ &args))))
(add-mult x 1 2 3 4 5)
((add-mult x) 1 2 3 4 5)
(def '(args) '(add-mult2 x y))
(def '(body) (+ x (* x y)))
(def (head args) (# (tail args) body))
(add-mult2 10 20)
(func '(add-mult3 x y) (+ x (* x y)))
(add-mult3 20 30)
(if (> 20 10) (+ 20 10) (- 20 10))
